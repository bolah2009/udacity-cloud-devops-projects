AWSTemplateFormatVersion: '2010-09-09'
Description: Creates the required server infrastructure
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  BolaWebAppLaunchTemplateVersionNumber:
    Description: The version of the launch template
    Type: String
    Default: '1'

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIpv6: ::/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} LBSecurityGroup
        - Key: Description
          Value: !Sub ${EnvironmentName} Load Balancer Security Group

  BolaWebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: BolaWebAppLaunchTemplate
      LaunchTemplateData:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install apache2 -y
            systemctl start apache2.service
            cd /var/www/html
            echo "Bola Udacity Demo Web Server is Up and Running!" > index.html
        ImageId: ami-0574da719dca65348
        KeyName: udacity_key
        SecurityGroupIds:
          - Fn::ImportValue: !Sub '${EnvironmentName}-WS-SG'
        InstanceType: t2.micro
        BlockDeviceMappings:
          - DeviceName: '/dev/sdk'
            Ebs:
              VolumeSize: '8'

  BolaWebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub '${EnvironmentName}-PUB-NETS'
      LaunchTemplate:
        LaunchTemplateId: !Ref BolaWebAppLaunchTemplate
        Version: !Ref BolaWebAppLaunchTemplateVersionNumber
      MinSize: '2'
      MaxSize: '4'
      TargetGroupARNs:
        - Ref: BolaWebAppTargetGroup

  BolaWebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub '${EnvironmentName}-PUB1-SN'
        - Fn::ImportValue: !Sub '${EnvironmentName}-PUB2-SN'
      SecurityGroups:
        - Ref: LBSecGroup

  BolaListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: BolaWebAppTargetGroup
      LoadBalancerArn:
        Ref: BolaWebAppLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref 'BolaWebAppTargetGroup'
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref 'BolaListener'
      Priority: 1

  BolaWebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: '${EnvironmentName}-VPCID'
