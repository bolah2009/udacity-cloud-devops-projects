version: 2.1

jobs:
  install-packages:
    docker:
      - image: cimg/node:16.18 # https://circleci.com/developer/images/image/cimg/node#variants
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
            - v1-deps-
      - run:
          name: 'Install packages'
          command: |
            yarn install
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  check-format:
    docker:
      - image: cimg/node:16.18
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
            - v1-deps-
      - run:
          name: 'Check format'
          command: |
            yarn format:check
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file 03-auto-deploy-monitoring-logging/rollback/template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ['f7:6b:56:a9:38:8a:0b:f5:0d:ca:f8:f1:51:81:79:a5']
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            cd 03-auto-deploy-monitoring-logging/rollback
            ansible-playbook -i inventory main.yml

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="http://3.91.217.89:3000"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi

workflows:
  pr-workflow:
    jobs:
      - install-packages
      - check-format:
          requires:
            - install-packages
      - smoke_test
